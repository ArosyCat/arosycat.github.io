/**
* 堆排序
* @author ArosyCat
/
public class HeapSort{
    
    public static void main(String[] args) {
        int[] ints = {70, 5, 7, 11, 23, 32, 14, 6};
        heapSort(ints);
        System.out.println(Arrays.toString(ints)); //[5, 6, 7, 11, 14, 23, 32, 70]
    }
    
    public static void heapSort(int[] arr){
        if(arr == null || arr.length < 2){
            return;
        }
        for(int i = 0; i < arr.length; i++){
            heapInsert(arr,i);
        }
        int size = arr.length;
        swap(arr,0,--size);
        while(size > 0){
            heapify(arr,0,size);
            swap(arr,0,--size);
        }
    }
    
    public static void heapInsert(int[] arr,int index){
        while(arr[index] > arr[(index - 1) / 2]){
            swap(arr,index,((index - 1) / 2));
            index = (index - 1) / 2;
        }
    }
    
    public static void heapify(int[] arr,int index,int size){
        int leftChi = index * 2 + 1;
        while(leftChi < size){
            int largest = leftChi + 1 < size && arr[leftChi + 1] > arr[leftChi] ? leftChi + 1 : leftChi;
            largest = arr[largest] > arr[index] ? largest : index;
            if(largest == index){
                break;
            }
            swap(arr,index,largest);
            index = largest;
            leftChi = index * 2 + 1;
        }
    }
    
    public static void swap(int[] arr,int i,int j){
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}
